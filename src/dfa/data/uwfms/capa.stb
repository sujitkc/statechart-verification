statechart sc{
   events {
	e;
	Next;
	No_event;
	Error;
  }
    CA_Enabled : boolean : local;
    PRNDL_In:int:local;
  	CA_HVI : int : local;
  	Warning :int: local;
  	AccelPedal :int: local;
    BrakePedal:int:local;

	BoolTRUE : boolean : local;
	BoolFALSE : boolean : local;
	minusone: int :local;
	PA_Enabled : boolean : local;
	PA_HVI : int : local;
	Speed: int: local;
 	ThreatCA:int:local;
	Accepted:boolean:local;
	SpaceFound:boolean:local;
	set_Throttle:int:local;
	set_SteerOut:int:local;
	SteerIn:int:local;
	Set_Brake:int:local;

    entry:{
        BoolTRUE:=true;
        BoolFALSE:=false;
        CA_Enabled:=true;
        PA_Enabled:=true;
	minusone:=0-1;
        //Speed:=0;
    }
    exit:{}
    functions {
  input<|int|>() : int;
  }
  shell capa{
    entry:{}
    exit:{}
    state SpeedSetting{
		entry:{ Speed:=0;}
		exit:{}
			
      state HoldSpeed{
				entry:{
         
          AccelPedal:=input<|int|>();
          BrakePedal:=input<|int|>();
        }
				exit:{}
			}
      state IncSpeed{
				entry:{
          AccelPedal:=input<|int|>();
          BrakePedal:=input<|int|>();
        }
				exit:{}
	}
			state DecSpeed{
				entry:{
          AccelPedal:=input<|int|>();
          BrakePedal:=input<|int|>();
        }
				exit:{}
			}
			
		transition sst27{
				source: sc.capa.SpeedSetting.DecSpeed;
				destination: sc.capa.SpeedSetting.HoldSpeed;
				trigger: e;
				guard:(BrakePedal>=0);
				action:{}
		}
		transition sst32{
				source: sc.capa.SpeedSetting.IncSpeed;
				destination: sc.capa.SpeedSetting.HoldSpeed;
				trigger: e;
				guard:(BrakePedal>=0);
				action:{}
		}
		
		transition sst31{
				source: sc.capa.SpeedSetting.HoldSpeed;
				destination: sc.capa.SpeedSetting.IncSpeed;
				trigger: e;
				guard:(BrakePedal>=0);//((AccelPedal>30) && (BrakePedal=0)); 
				action:{Speed:=Speed+1;} 

		}
		
		transition sst33{
				source: sc.capa.SpeedSetting.IncSpeed;
				destination: sc.capa.SpeedSetting.IncSpeed;
				trigger: e;
				guard:((BrakePedal=0)&&(Speed<100));
				action:{Speed:=Speed+1;}
		}
		transition sst34{
				source: sc.capa.SpeedSetting.DecSpeed;
				destination: sc.capa.SpeedSetting.DecSpeed;
				trigger: e;
				guard:((BrakePedal>0)&&(Speed>0));
				action:{Speed:=Speed-1;}
		}
		transition sst35{
				source: sc.capa.SpeedSetting.HoldSpeed;
				destination: sc.capa.SpeedSetting.DecSpeed;
				trigger: e;

       				guard:(BrakePedal>=0);
				action:{Speed:=Speed-1;}

		}
		
		
		
	}
    state Sensor{
        entry:{}
        exit:{}
        state sense{
            entry:{
               // AccelPedal:=input<|int|>();
                    PRNDL_In:=input<|int|>();

            }
            exit:{}

        }
        transition set11{
				source: sc.capa.Sensor.sense;
				destination: sc.capa.Sensor.sense;
				trigger: e;
      				guard:(BrakePedal>=0);
				action:{Speed:=Speed-1;}

		}
    }
	
state CollisionAvoidance{
        entry:{}
        exit:{}   
          state caDisabled{
   entry: {}
   exit : {}
  }
  state caOverride{
   entry: {}
   exit : {}
  }
  state caFail{
   entry: {}
   exit : {}
  }
  state caEnabled{
   //BreakPedal:int:;
   //Speed:int:;
   //PRNDL_In:int:;

   
   entry: {
    //Speed:=input<|int|>();

   }
   exit : {}
   state caDisengaged{
     entry: {}
     exit : {}
   }
   state caEngaged{
    // ThreatCA:int:;
	// Set_Brake:int:;
	 
	 
	 entry: {

	 }
     exit : {}
	 
	 state caIdle{
	 entry: {}
     exit : {}
	 }
	 
	 state caWarn{
	 entry: {}
     exit : {}
	 }
	 
	 state caAvoid{
	 entry: {}
     exit : {}
	}
	
	state caMitigate{
	 entry: {}
     exit : {}
    }
	transition cat19{
    source:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caIdle;
    destination:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caWarn;
    trigger: e;
    guard:(ThreatCA=1);
    action:{Warning:=1;}
    }
	
	transition cat20{
    source:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caWarn;
    destination:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caIdle;
    trigger: e;
    guard:(ThreatCA=0);
    action:{Warning:=0;}
    }
	
	transition cat21{
    source:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caAvoid;
    destination:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caWarn;
    trigger: e;
    guard:(ThreatCA=1);
    action:{Warning:=1;}
    }
	
	transition cat22{
    source:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caWarn;
    destination:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caAvoid;
    trigger: e;
    guard:(ThreatCA=2);
    action:{Warning:=2; Set_Brake:=30;}
    }
	
	transition cat23{
    source:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caAvoid;
    destination:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caIdle;
    trigger: e;
    guard:(ThreatCA=0);
    action:{Warning:=0;}
    }
	
	transition cat33{
    source:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caIdle;
    destination:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caAvoid;
    trigger: e;
    guard:(ThreatCA=2);
    action:{Warning:=2;Set_Brake:=30;}
    }
	
	transition cat34{
    source:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caMitigate;
    destination:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caIdle;
    trigger: e;
    guard:(ThreatCA=0);
    action:{Warning:=0;}
    }
	
	transition cat35{
    source:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caIdle;
    destination:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caMitigate;
    trigger: e;
    guard:(ThreatCA=3);
    action:{Warning:=3; Set_Brake:=80;}
    }
	
	transition cat29{
    source:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caWarn;
    destination:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caMitigate;
    trigger: e;
    guard:(ThreatCA=3);
    action:{Warning:=3;Set_Brake:=80;}
    }
	
	transition cat31{
    source:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caMitigate;
    destination:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caWarn;
    trigger: e;
    guard:(ThreatCA=1);
    action:{Warning:=1;}
    }
	
	transition cat30{
    source:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caAvoid;
    destination:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caMitigate;
    trigger: e;
    guard:(ThreatCA=3);
    action:{Warning:=3;Set_Brake:=80;}
    }
	
	transition cat32{
    source:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caMitigate;
    destination:sc.capa.CollisionAvoidance.caEnabled.caEngaged.caAvoid;
    trigger: e;
    guard:(ThreatCA=2);
    action:{Warning:=2;Set_Brake:=30;}
    }
	
   }
   state caHalt{
	 entry: {}
     exit : {}
   }
   transition cat16{
    source:sc.capa.CollisionAvoidance.caEnabled.caDisengaged;
    destination:sc.capa.CollisionAvoidance.caEnabled.caEngaged;
    trigger: e;
    guard:(Speed>25)&&(PRNDL_In=3);
    action:{CA_HVI:=2;}
  }
   
   transition cat17{
    source:sc.capa.CollisionAvoidance.caEnabled.caEngaged;
    destination:sc.capa.CollisionAvoidance.caEnabled.caDisengaged;
    trigger: e;
    guard:((Speed>0)&&(Speed<=25))||(PRNDL_In!=3);
    action:{CA_HVI:=1;Warning:=0;}
  }
   
   transition cat24{
    source:sc.capa.CollisionAvoidance.caEnabled.caHalt;
    destination:sc.capa.CollisionAvoidance.caEnabled.caDisengaged;
    trigger: e;
    guard:(BrakePedal>10);
    action:{CA_HVI:=1;Warning:=0;}
  }
   
   transition cat25{
    source:sc.capa.CollisionAvoidance.caEnabled.caEngaged;
    destination:sc.capa.CollisionAvoidance.caEnabled.caHalt;
    trigger: e;
    guard:(Speed=1);
    action:{CA_HVI:=1;Warning:=4;}
  }
   
  }
  transition cat14{
  source:sc.capa.CollisionAvoidance.caDisabled;
  destination:sc.capa.CollisionAvoidance.caEnabled;
  trigger: e;
  guard:(CA_Enabled=BoolTRUE);
  action:{CA_HVI:=1;}
  }
  
  transition cat15{
  source:sc.capa.CollisionAvoidance.caEnabled;
  destination:sc.capa.CollisionAvoidance.caDisabled;
  trigger: e;
  guard:(CA_Enabled!=BoolTRUE);
  action:{CA_HVI:=0;Warning:=0;}
  }
   
  transition cat38{
  source:sc.capa.CollisionAvoidance.caOverride;
  destination:sc.capa.CollisionAvoidance.caDisabled;
  trigger: e;
  guard:(CA_Enabled!=BoolTRUE);
  action:{CA_HVI:=0;Warning:=0;}
  }
  
  transition cat36{
  source:sc.capa.CollisionAvoidance.caEnabled;
  destination:sc.capa.CollisionAvoidance.caOverride;
  trigger: e;
  guard:(AccelPedal>=35);
  action:{CA_HVI:=4;Warning:=0;}
  }
  
  transition cat37{
  source:sc.capa.CollisionAvoidance.caOverride;
  destination:sc.capa.CollisionAvoidance.caEnabled;
  trigger: e;
  guard:(AccelPedal<35);
  action:{CA_HVI:=1;}
  }
  
 /* transition t39{
  source:sc.capa.CollisionAvoidance.caOverride;
  destination:sc.capa.CollisionAvoidance.caFail;
  trigger: Error;
  guard:true;
  action:{CA_HVI:=3;}
  }*/
  
  /*transition t27{
  source:sc.capa.CollisionAvoidance.caEnabled;
  destination:sc.capa.CollisionAvoidance.caFail;
  trigger: Error;
  guard:true;
  action:{CA_HVI:=3;Warning:=0;}
  }*/
 
    }
    state ParkAssist{
        entry:{}
        exit:{}
    /*    	state paFail{
		entry:{}
		exit:{}
	}*/
	state paDisabled{
		entry:{}
		exit:{}
	}
	state paEnabled{
		//PRNDL_In:int:;

	/*	Accepted:boolean:;
		SpaceFound:boolean:;
		set_Throttle:int:;
		set_SteerOut:int:;
		SteerIn:int:;
		AccelPedal:int:;*/
		entry:{}
		exit:{}
			state paIdle{
				entry:{}
				exit:{}
			}
			state paSearching{
				entry:{}
				exit:{}
			}
			state paPrompting{
				entry:{}
				exit:{}
			}
			state paOverride{
				entry:{}
				exit:{}
			}
			state paEngaged{
				//set_Brake:int:;
	
				entry:{}
				exit:{}
				state paSwivelIn{
					entry:{}
					exit:{}
				}
				state paSwivelOut{
					entry:{}
					exit:{}
				}
				state paCenter{
					entry:{}
					exit:{}
				}
				state paStop1{
					entry:{}
					exit:{}
				}
				state paStop2{
					entry:{}
					exit:{}
				}
				transition pat30{
					source: sc.capa.ParkAssist.paEnabled.paEngaged.paSwivelIn;
					destination: sc.capa.ParkAssist.paEnabled.paEngaged.paStop1;
					trigger: Next;
					guard:(PRNDL_In=1)&&(Speed>0)&&(Speed<=5);
					action:{PA_HVI:=4;Set_Brake:=30;}
				}
				transition pat27{
					source: sc.capa.ParkAssist.paEnabled.paEngaged.paSwivelIn;
					destination: sc.capa.ParkAssist.paEnabled.paEngaged.paSwivelOut;
					trigger: Next;
					guard:(PRNDL_In=1)&&(Speed>0)&&(Speed<=5);
					action:{PA_HVI:=4;set_Throttle:=20;set_SteerOut:=minusone;} //set_SteerOut=-1
				}
				transition pat23{
					source: sc.capa.ParkAssist.paEnabled.paEngaged.paStop1;
					destination: sc.capa.ParkAssist.paEnabled.paEngaged.paCenter;
					trigger: Next;
					guard:(Speed=0);
					action:{PA_HVI:=4;set_Throttle:=20;}
				}
				transition pat19{
					source: sc.capa.ParkAssist.paEnabled.paEngaged.paCenter;
					destination: sc.capa.ParkAssist.paEnabled.paEngaged.paStop2;
					trigger: Next;
					guard:(PRNDL_In=3)&&(Speed>0)&&(Speed<=5);
					action:{PA_HVI:=4;Set_Brake:=30;}
				}
				
			}
			state paAbort{
					entry:{}
					exit:{}
			}
			transition pat21{
					source: sc.capa.ParkAssist.paEnabled.paIdle;
					destination: sc.capa.ParkAssist.paEnabled.paSearching;
					trigger: e;
					guard:(Speed>0) && (Speed<=10) && (PRNDL_In=3);
					action:{PA_HVI:=2;}
				}
			transition pat22{
					source: sc.capa.ParkAssist.paEnabled.paSearching;
					destination: sc.capa.ParkAssist.paEnabled.paIdle;
					trigger: e;
					guard:(Speed=0) || (Speed>0) || (PRNDL_In!=3);
					action:{PA_HVI:=1;}
				}
			transition pat24{
					source: sc.capa.ParkAssist.paEnabled.paSearching;
					destination: sc.capa.ParkAssist.paEnabled.paPrompting;
					trigger: e;
					guard:(SpaceFound=BoolTRUE);
					action:{PA_HVI:=3;}
				}
			transition pat25{
					source: sc.capa.ParkAssist.paEnabled.paPrompting;
					destination: sc.capa.ParkAssist.paEnabled.paSearching;
					trigger: e;
					guard:(SpaceFound=BoolFALSE)||(Accepted=BoolFALSE);
					action:{PA_HVI:=2;}
				}
			transition pat26{
					source: sc.capa.ParkAssist.paEnabled.paPrompting;
					destination: sc.capa.ParkAssist.paEnabled.paEngaged.paSwivelOut;
					trigger: e;
					guard:(Accepted=BoolTRUE)&&(Speed=0)&&(PRNDL_In=1);
					action:{PA_HVI:=4;set_Throttle:=20;set_SteerOut:=1;}
				}
			/*transition pat39{
					source: sc.capa.ParkAssist.paEnabled.paEngaged.paSwivelOut;
					destination: sc.capa.ParkAssist.paEnabled.paAbort;
					trigger: e;
					guard:(PRNDL_In!=1);
					action:{PA_HVI:=6;}
				}
			transition pat38{
					source: sc.capa.ParkAssist.paEnabled.paEngaged.paCenter;
					destination: sc.capa.ParkAssist.paEnabled.paAbort;
					trigger: e;
					guard:(PRNDL_In!=3);
					action:{PA_HVI:=6;}
				}
			transition pat37{
					source: sc.capa.ParkAssist.paEnabled.paEngaged.paSwivelIn;
					destination: sc.capa.ParkAssist.paEnabled.paAbort;
					trigger: e;
					guard:(PRNDL_In!=1);
					action:{PA_HVI:=6;}
				}
			transition pat30{
					source: sc.capa.ParkAssist.paEnabled.paEngaged;
					destination: sc.capa.ParkAssist.paEnabled.paAbort;
					trigger: e;
					guard:(SteerIn>0)||(AccelPedal>0);
					action:{PA_HVI:=6;}
				}
			transition pat36{
					source: sc.capa.ParkAssist.paEnabled.paOverride;
					destination: sc.capa.ParkAssist.paEnabled.paAbort;
					trigger: e;
					guard:(SteerIn>0)||(AccelPedal>0);
					action:{PA_HVI:=6;}
				}*/
	}
	
	transition pat29{
		source: sc.capa.ParkAssist.paDisabled;
		destination: sc.capa.ParkAssist.paEnabled;
		trigger: e;
		guard:(PA_Enabled=BoolTRUE);
		action:{PA_HVI:=1;}
	}
	transition pat20{
		source: sc.capa.ParkAssist.paDisabled;
		destination: sc.capa.ParkAssist.paEnabled;
		trigger: e;
		guard:(PA_Enabled=BoolFALSE);
		action:{PA_HVI:=0;}
	}
	transition pat33{
		source: sc.capa.ParkAssist.paDisabled;
		destination: sc.capa.ParkAssist.paEnabled;
		trigger: Error;
		guard:(true);
		action:{PA_HVI:=8;}
	}
	transition pat35{
		source: sc.capa.ParkAssist.paEnabled.paEngaged.paStop2;
		destination: sc.capa.ParkAssist.paDisabled;
		trigger: e;
		guard:(Speed=0);
		action:{PA_HVI:=5;}
	}

    }

  }
}
