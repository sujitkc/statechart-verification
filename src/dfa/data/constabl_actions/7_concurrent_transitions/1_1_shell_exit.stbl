/* checking the entry into shell state

Here the code to be executed will be
init code:
<x:=1,x:=2,x:=13,x:=14, [<x:=17, x:=18>,<x:=25, x:=26>]>

This code structure should create 6 interleavings

Now if event "e" occurs the code that will be executed is

<[<x:=23; x:=24>,<x:=31;x:=32>], y:=33, x:=x+1>

The first set concurrency will give 6 interleavings. Now there are 6*6 possibilities = 36 paths. followed by 2 nodes y:=33 and x:=x+1

*/
statechart  chart{
  
  events {
	e;
	e1;
  }
    x:int:local;
    y:int:local;
  entry : {x:=1;x:=2;}
  exit  : {x:=3;x:=4;} 
  functions {
  input<||>() : int;
  }
   
  shell B{
    entry:{x:=13;x:=14;}
    exit:{x:=15;x:=16;}

    state R1{
      entry:{x:=17;x:=18;}
      exit:{}

      state R1A{
        entry:{}
        exit:{x:=23; x:=24;}
      }

      state R1B{
        entry:{x:=35; x:=36;}
        exit:{x:=37; x:=38;}
      }

      transition t1{
        source: chart.B.R1.R1A;
        destination: chart.B.R1.R1B;
        trigger: e1;
        guard:(true);
        action:{x:=43;x:=44;}
      }
    }

    state R2{
      entry:{x:=25; x:=26;}
      exit:{}

      state R2A{
        entry:{}
        exit:{y:=31; y:=32;}
      }

      state R2B{
        entry:{y:=39; y:=40;}
        exit:{x:=41; x:=42;}
      }

      transition t2{
        source: chart.B.R2.R2A;
        destination: chart.B.R2.R2B;
        trigger: e1;
        guard:(true);
        action:{y:=33;y:=34;}
      }	    
    }
  }
   state C{
   entry:{x:=x+1;}
   exit:{}
   
   }      
   transition t3{
        source: chart.B;
        destination: chart.C;
        trigger: e;
        guard:(true);
        action:{y:=33;}
      }
}
