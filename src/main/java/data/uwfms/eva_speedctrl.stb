
//A.5 - https://cs.uwaterloo.ca/~aljuarez/Docs/Thesis_Juarez_Alma.pdf
statechart  EVASC{
  
  events {
	e;
    No_event; //Signal at a cycle unit for the Stateflow model when no other event is generated
	SetAccelIn;
	SetAccelOut;
	ResumeCoastIn;
	ResumeCoastOut;
	Cancel;
	Error;
  }
 
  EVA_Enabled : boolean : local;
  EVA_HVI : int : local;  
  AccelPedal :int: local;
  BoolTRUE : boolean : local;
  BoolFALSE : boolean : local;
  minusone : int : local;

  BrakePedal:int:local;
  PRNDL_In:int:local;
  Siren :boolean : local;
  WayClear: boolean : local;
  DontStop: boolean : local;
 
 Speed:int:local;
  entry : {
  BoolTRUE:=true;
  BoolFALSE:=false;
  EVA_Enabled:=true;
  minusone:=0-1;
   AccelPedal:=input<|int|>();
   Speed:=1;
   BrakePedal:=input<|int|>();

  }
  exit  : {} 
  functions {
	//input<||>() : int;
  }
  shell evascshell{
    entry :{
    }
    exit  : {} 
  state Sensor{
	entry:{}
	exit:{}
	state sense{
		entry:{
		    	   Siren:=input<|boolean|>();
			   WayClear:=input<|boolean|>();	
			   DontStop:=input<|boolean|>();
			   PRNDL_In:=input<|int|>();	
		}
		exit:{}
	}
	transition t11{
				source: EVASC.evascshell.Sensor.sense;
				destination: EVASC.evascshell.Sensor.sense;
				trigger: e;
				guard:(true);
				action:{}
	}
		
	}
  state SpeedSetting{
		entry:{}
		exit:{}
			
      state HoldSpeed{
				entry:{
          AccelPedal:=input<|int|>();
          BrakePedal:=input<|int|>();
        }
				exit:{}
			}
      state IncSpeed{
				entry:{
          AccelPedal:=input<|int|>();
          BrakePedal:=input<|int|>();
        }
				exit:{}
	}
			state DecSpeed{
				entry:{
          AccelPedal:=input<|int|>();
          BrakePedal:=input<|int|>();
        }
				exit:{}
			}
			
		transition t27{
				source: EVASC.evascshell.SpeedSetting.DecSpeed;
				destination: EVASC.evascshell.SpeedSetting.HoldSpeed;
				trigger: e;
				guard:(BrakePedal>=0);
				action:{}
		}
		transition t32{
				source: EVASC.evascshell.SpeedSetting.IncSpeed;
				destination: EVASC.evascshell.SpeedSetting.HoldSpeed;
				trigger: e;
				guard:(BrakePedal>=0);
				action:{}
		}
		
		transition t31{
				source: EVASC.evascshell.SpeedSetting.HoldSpeed;
				destination: EVASC.evascshell.SpeedSetting.IncSpeed;
				trigger: e;
				guard:((AccelPedal>30) && (BrakePedal=0)); 
				action:{Speed:=Speed+1;} 

		}
		
		transition t33{
				source: EVASC.evascshell.SpeedSetting.IncSpeed;
				destination: EVASC.evascshell.SpeedSetting.IncSpeed;
				trigger: e;
				guard:((BrakePedal=0)&&(Speed<100));
				action:{Speed:=Speed+1;}
		}
		transition t34{
				source: EVASC.evascshell.SpeedSetting.DecSpeed;
				destination: EVASC.evascshell.SpeedSetting.DecSpeed;
				trigger: e;
				guard:((BrakePedal>0)&&(Speed>0));
				action:{Speed:=Speed-1;}
		}
		transition t35{
				source: EVASC.evascshell.SpeedSetting.HoldSpeed;
				destination: EVASC.evascshell.SpeedSetting.DecSpeed;
				trigger: e;

       				guard:(BrakePedal>=0);
				action:{Speed:=Speed-1;}

		}
		
		
		
	}


  state EmergencyVehicleAvoidance{
    entry:{}
    exit:{}
  
  
  state Enabled{
  
   

   
   entry: {

	 }
   exit : {}
   state Disengaged{
     entry: {}
     exit : {}
   }
   state Engaged{
     
	 Set_Brake:int:local;
	 Set_Throttle:int:local;
	 Set_SteerOut:int:local;

  	 
	 entry: {

	 }
     exit : {}
	 
	 state Slow{
	 entry: {}
     exit : {}
	 }
	 
	 state Coast{
	 entry: {}
     exit : {}
	 }
	 
	 state PullOver{
	 entry: {}
     exit : {}
	}
	
	
	transition t24{
    source: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled.Engaged.Slow;
    destination: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled.Engaged.Coast;
    trigger: e;
    guard:(DontStop=BoolTRUE);
    action:{Set_Throttle:=35;}
    }
	
    transition t23{
    source: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled.Engaged.Slow;
    destination: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled.Engaged.PullOver;
    trigger: e;
    guard:(DontStop!=BoolTRUE)&&(WayClear=BoolTRUE);
    action:{Set_Brake:=60;Set_SteerOut:=minusone;}
    }
    
    
    transition t25{
    source: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled.Engaged.Coast;
    destination: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled.Engaged.Slow;
    trigger: e;
    guard:(DontStop=BoolFALSE)&&(WayClear=BoolFALSE);
    action:{Set_Brake:=30;}
    }
	
	transition t26{
    source: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled.Engaged.Coast;
    destination: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled.Engaged.PullOver;
    trigger: e;
    guard:(DontStop!=BoolTRUE)&&(WayClear=BoolTRUE);
    action:{Set_Brake:=60;Set_SteerOut:=minusone;}
    }
    
     transition t22{
    source: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled.Engaged.PullOver;
    destination: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled.Engaged.Slow;
    trigger: e;
    guard:(DontStop=BoolFALSE)&&(WayClear=BoolFALSE);
    action:{Set_Brake:=30;}
    }
	
	transition t27{
    source: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled.Engaged.PullOver;
    destination: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled.Engaged.Coast;
    trigger: e;
    guard:(DontStop=BoolTRUE);
    action:{Set_Throttle:=35;}
    }
	
	
   }
   
   transition t19{
    source: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled.Engaged;
    destination: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled.Disengaged;
    trigger: e;
    guard:(Siren=BoolFALSE)||(Speed=0)||(PRNDL_In!=3);
    action:{EVA_HVI:=1;}
  }
   
   transition t20{
    source: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled.Disengaged;
    destination: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled.Engaged;
    trigger: e;
    guard:(Siren=BoolTRUE)&&(Speed>0)&&(PRNDL_In=3);
    action:{EVA_HVI:=1;}
  }
   
 
   
  }
state Disabled{
   entry: {}
   exit : {}
  }
  state Override{
   entry: {}
   exit : {}
  }
  state Fail{
   entry: {}
   exit : {}
  }
  transition t13{
  source: EVASC.evascshell.EmergencyVehicleAvoidance.Disabled;
  destination: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled;
  trigger: e;
  guard:(EVA_Enabled=BoolTRUE);
  action:{EVA_HVI:=1;}
  }
  
  transition t14{
  source: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled;
  destination: EVASC.evascshell.EmergencyVehicleAvoidance.Disabled;
  trigger: e;
  guard:(EVA_Enabled!=BoolTRUE);
  action:{EVA_HVI:=0;}
  }
   
  transition t16{
  source: EVASC.evascshell.EmergencyVehicleAvoidance.Override;
  destination: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled;
  trigger: e;
  guard:(EVA_Enabled!=BoolTRUE);
  action:{EVA_HVI:=0;}
  }
  
  transition t17{
  source: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled;
  destination: EVASC.evascshell.EmergencyVehicleAvoidance.Override;
  trigger: e;
  guard:(BrakePedal!=0)||(AccelPedal>=30);
  action:{EVA_HVI:=2;}
  }
  
  transition t18{
  source: EVASC.evascshell.EmergencyVehicleAvoidance.Override;
  destination: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled;
  trigger: e;
  guard:(BrakePedal=0)&&(AccelPedal<30);
  action:{EVA_HVI:=2;}
  }
  
 /* transition t29{
  source: EVASC.evascshell.EmergencyVehicleAvoidance.Override;
  destination: EVASC.evascshell.EmergencyVehicleAvoidance.Fail;
  trigger: Error;
  guard:true;
  action:{EVA_HVI:=4;}
  }
  
  transition t28{
  source: EVASC.evascshell.EmergencyVehicleAvoidance.Enabled;
  destination: EVASC.evascshell.EmergencyVehicleAvoidance.Fail;
  trigger: Error;
  guard:true;
  action:{EVA_HVI:=4;}
  }*/
  
}
}
}
