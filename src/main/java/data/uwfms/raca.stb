statechart sc{
   events {
	e;
	Next;
	No_event;
	Error;
	SetAccelIn;
	SetAccelOut;
	ResumeCoastIn;
	ResumeCoastOut;
	Cancel;
  }

    PRNDL_In:int:local;
  RA_Enabled : boolean : local;
 RA_HVI : int : local;
  RA_Warning:int:local;
  Warning :int: local;
  AccelPedal :int: local;
    BrakePedal:int:local;
LG_Enabled : boolean : local;
  LG_Warning : boolean :local;
  minusten:int:local;
  BoolTRUE : boolean : local;
  BoolFALSE : boolean : local;
  minusone: int :local;
  CA_Enabled : boolean : local;
  CA_HVI : int : local;
  Speed: int: local;
	TargetSpeed : int : local;
  	  FollowDist : int : local;
       Set_Brake:int:local;
    entry:{
        BoolTRUE:=true;
        BoolFALSE:=false;
        RA_Enabled:=true;  
        CA_Enabled:=true;
	minusone:=0-1;
	minusten:=0-10;

    }
    exit:{}
    functions {
  input<|int|>() : int;
  }
  shell raca{
  	/*TargetSpeed : int : local;
  	  FollowDist : int : local;*/
    entry:{}
    exit:{}

    state ReversingAssistance{
     state Disabled{
   entry: {}
   exit : {}
  }
  state Override{
   entry: {}
   exit : {}
  }
  state Fail{
   entry: {}
   exit : {}
  }
  state Enabled{
   //BrakePedal:int:local;
  // Speed:int:local;
   //PRNDL_In:int:local;
   
   
   entry: {
     
 }
   exit : {}
   state Disengaged{
     entry: {}
     exit : {}
   }
   state Engaged{
     
	// Set_Brake:int:local;
	 ObstacleZone:int:local;

	 entry: {

	 }
     exit : {}
	 
	 state Idle{
	 entry: {}
     exit : {}
	 }
	 
	 state Warn{
	 entry: {}
     exit : {}
	 }
	 
	 state Assist{
	 entry: {}
     exit : {}
	}
	
	
	transition rat23{
    source: sc.raca.ReversingAssistance.Enabled.Engaged.Idle;
    destination: sc.raca.ReversingAssistance.Enabled.Engaged.Warn;
    trigger: e;
    guard:(ObstacleZone=1);
    action:{RA_Warning:=1;}
    }
	
	transition rat24{
    source: sc.raca.ReversingAssistance.Enabled.Engaged.Warn;
    destination: sc.raca.ReversingAssistance.Enabled.Engaged.Idle;
    trigger: e;
    guard:(ObstacleZone=0);
    action:{RA_Warning:=0;}
    }
    
    transition rat27{
    source: sc.raca.ReversingAssistance.Enabled.Engaged.Warn;
    destination: sc.raca.ReversingAssistance.Enabled.Engaged.Assist;
    trigger: e;
    guard:(ObstacleZone=2);
    action:{RA_Warning:=2;Set_Brake:=60;}
    }
    transition rat28{
    source: sc.raca.ReversingAssistance.Enabled.Engaged.Assist;
    destination: sc.raca.ReversingAssistance.Enabled.Engaged.Warn;
    trigger: e;
    guard:(ObstacleZone=1);
    action:{RA_Warning:=1;}
    }
    transition rat29{
    source: sc.raca.ReversingAssistance.Enabled.Engaged.Idle;
    destination: sc.raca.ReversingAssistance.Enabled.Engaged.Assist;
    trigger: e;
    guard:(ObstacleZone=2);
    action:{RA_Warning:=2;Set_Brake:=60;}
    }
    transition rat30{
    source: sc.raca.ReversingAssistance.Enabled.Engaged.Assist;
    destination: sc.raca.ReversingAssistance.Enabled.Engaged.Idle;
    trigger: e;
    guard:(ObstacleZone=0);
    action:{RA_Warning:=0;}
    }
    
	
   }
   state Hold{
   	entry:{}
   	exit:{}
   }
   
   transition rat22{
    source: sc.raca.ReversingAssistance.Enabled.Engaged;
    destination: sc.raca.ReversingAssistance.Enabled.Disengaged;
    trigger: e;
    guard:((Speed>0)&&(Speed<10))||(Speed>25)||(PRNDL_In!=1);
    action:{RA_HVI:=1;RA_Warning:=0;}
  }
   
   transition rat21{
    source: sc.raca.ReversingAssistance.Enabled.Disengaged;
    destination: sc.raca.ReversingAssistance.Enabled.Engaged;
    trigger: e;
    guard:(Speed>=10)&&(Speed<=25)&&(PRNDL_In=1);
    action:{RA_HVI:=2;}
  }
    transition rat25{
    source: sc.raca.ReversingAssistance.Enabled.Engaged;
    destination: sc.raca.ReversingAssistance.Enabled.Hold;
    trigger: e;
    guard:(Speed=0);
    action:{RA_Warning:=3;}
  }
  transition rat26{
    source: sc.raca.ReversingAssistance.Enabled.Hold;
    destination: sc.raca.ReversingAssistance.Enabled.Disengaged;
    trigger: e;
    guard:(BrakePedal>20);
    action:{RA_HVI:=1;RA_Warning:=0;}
  }
   
  }
  transition rat13{
  source: sc.raca.ReversingAssistance.Disabled;
  destination: sc.raca.ReversingAssistance.Enabled;
  trigger: e;
  guard:(RA_Enabled=BoolTRUE);
  action:{RA_HVI:=1;}
  }
  
  transition rat14{
  source: sc.raca.ReversingAssistance.Enabled;
  destination: sc.raca.ReversingAssistance.Disabled;
  trigger: e;
  guard:(RA_Enabled!=BoolTRUE);
  action:{RA_HVI:=0;RA_Warning:=0;}
  }
   
  transition rat16{
  source: sc.raca.ReversingAssistance.Override;
  destination: sc.raca.ReversingAssistance.Disabled;
  trigger: e;
  guard:(RA_Enabled!=BoolTRUE);
  action:{RA_HVI:=0;RA_Warning:=0;}
  }
  
  transition rat19{
  source: sc.raca.ReversingAssistance.Enabled;
  destination: sc.raca.ReversingAssistance.Override;
  trigger: e;
  guard:(AccelPedal>=35);
  action:{RA_HVI:=4;RA_Warning:=0;}
  }
  
  transition rat15{
  source: sc.raca.ReversingAssistance.Override;
  destination: sc.raca.ReversingAssistance.Enabled;
  trigger: e;
  guard:(AccelPedal<35);
  action:{RA_HVI:=1;}
  }
  
  transition rat32{
  source: sc.raca.ReversingAssistance.Override;
  destination: sc.raca.ReversingAssistance.Fail;
  trigger: Error;
  guard:true;
  action:{RA_HVI:=3;RA_Warning:=0;}
  }
  
  transition rat18{
  source: sc.raca.ReversingAssistance.Enabled;
  destination: sc.raca.ReversingAssistance.Fail;
  trigger: Error;
  guard:true;
  action:{RA_HVI:=3;RA_Warning:=0;}
  }
    }

    state SpeedSetting{
		entry:{ Speed:=0;}
		exit:{}
			
      state HoldSpeed{
				entry:{
         
          AccelPedal:=input<|int|>();
          BrakePedal:=input<|int|>();
        }
				exit:{}
			}
      state IncSpeed{
				entry:{
          AccelPedal:=input<|int|>();
          BrakePedal:=input<|int|>();
        }
				exit:{}
	}
			state DecSpeed{
				entry:{
          AccelPedal:=input<|int|>();
          BrakePedal:=input<|int|>();
        }
				exit:{}
			}
			
		transition sst27{
				source: sc.raca.SpeedSetting.DecSpeed;
				destination: sc.raca.SpeedSetting.HoldSpeed;
				trigger: e;
				guard:(BrakePedal>=0);
				action:{}
		}
		transition sst32{
				source: sc.raca.SpeedSetting.IncSpeed;
				destination: sc.raca.SpeedSetting.HoldSpeed;
				trigger: e;
				guard:(BrakePedal>=0);
				action:{}
		}
		
		transition sst31{
				source: sc.raca.SpeedSetting.HoldSpeed;
				destination: sc.raca.SpeedSetting.IncSpeed;
				trigger: e;
				guard:((AccelPedal>30) && (BrakePedal=0)); 
				action:{Speed:=Speed+1;} 

		}
		
		transition sst33{
				source: sc.raca.SpeedSetting.IncSpeed;
				destination: sc.raca.SpeedSetting.IncSpeed;
				trigger: e;
				guard:((BrakePedal=0)&&(Speed<100));
				action:{Speed:=Speed+1;}
		}
		transition sst34{
				source: sc.raca.SpeedSetting.DecSpeed;
				destination: sc.raca.SpeedSetting.DecSpeed;
				trigger: e;
				guard:((BrakePedal>0)&&(Speed>0));
				action:{Speed:=Speed-1;}
		}
		transition sst35{
				source: sc.raca.SpeedSetting.HoldSpeed;
				destination: sc.raca.SpeedSetting.DecSpeed;
				trigger: e;

       				guard:(BrakePedal>0);
				action:{Speed:=Speed-1;}

		}
		
		
		
	}
    state Sensor{
        entry:{}
        exit:{}
        state sense{
            entry:{
                //AccelPedal:=input<|int|>();
                    PRNDL_In:=input<|int|>();

            }
            exit:{}

        }
    }
	
  state CollisionAvoidance{
        entry:{}
        exit:{}   
          state caDisabled{
   entry: {}
   exit : {}
  }
  state caOverride{
   entry: {}
   exit : {}
  }
  state caFail{
   entry: {}
   exit : {}
  }
  state caEnabled{
   //BreakPedal:int:local;
   //Speed:int:local;
   //PRNDL_In:int:local;

   
   entry: {
    //Speed:=input<|int|>();

   }
   exit : {}
   state caDisengaged{
     entry: {}
     exit : {}
   }
   state caEngaged{
     ThreatCA:int:local;
	// Set_Brake:int:local;
	 
	 
	 entry: {

	 }
     exit : {}
	 
	 state caIdle{
	 entry: {}
     exit : {}
	 }
	 
	 state caWarn{
	 entry: {}
     exit : {}
	 }
	 
	 state caAvoid{
	 entry: {}
     exit : {}
	}
	
	state caMitigate{
	 entry: {}
     exit : {}
    }
	transition cat19{
    source:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caIdle;
    destination:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caWarn;
    trigger: e;
    guard:(ThreatCA=1);
    action:{Warning:=1;}
    }
	
	transition cat20{
    source:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caWarn;
    destination:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caIdle;
    trigger: e;
    guard:(ThreatCA=0);
    action:{Warning:=0;}
    }
	
	transition cat21{
    source:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caAvoid;
    destination:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caWarn;
    trigger: e;
    guard:(ThreatCA=1);
    action:{Warning:=1;}
    }
	
	transition cat22{
    source:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caWarn;
    destination:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caAvoid;
    trigger: e;
    guard:(ThreatCA=2);
    action:{Warning:=2; Set_Brake:=30;}
    }
	
	transition cat23{
    source:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caAvoid;
    destination:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caIdle;
    trigger: e;
    guard:(ThreatCA=0);
    action:{Warning:=0;}
    }
	
	transition cat33{
    source:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caIdle;
    destination:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caAvoid;
    trigger: e;
    guard:(ThreatCA=2);
    action:{Warning:=2;Set_Brake:=30;}
    }
	
	transition cat34{
    source:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caMitigate;
    destination:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caIdle;
    trigger: e;
    guard:(ThreatCA=0);
    action:{Warning:=0;}
    }
	
	transition cat35{
    source:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caIdle;
    destination:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caMitigate;
    trigger: e;
    guard:(ThreatCA=3);
    action:{Warning:=3; Set_Brake:=80;}
    }
	
	transition cat29{
    source:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caWarn;
    destination:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caMitigate;
    trigger: e;
    guard:(ThreatCA=3);
    action:{Warning:=3;Set_Brake:=80;}
    }
	
	transition cat31{
    source:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caMitigate;
    destination:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caWarn;
    trigger: e;
    guard:(ThreatCA=1);
    action:{Warning:=1;}
    }
	
	transition cat30{
    source:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caAvoid;
    destination:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caMitigate;
    trigger: e;
    guard:(ThreatCA=3);
    action:{Warning:=3;Set_Brake:=80;}
    }
	
	transition cat32{
    source:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caMitigate;
    destination:sc.raca.CollisionAvoidance.caEnabled.caEngaged.caAvoid;
    trigger: e;
    guard:(ThreatCA=2);
    action:{Warning:=2;Set_Brake:=30;}
    }
	
   }
   state caHalt{
	 entry: {}
     exit : {}
   }
   transition cat16{
    source:sc.raca.CollisionAvoidance.caEnabled.caDisengaged;
    destination:sc.raca.CollisionAvoidance.caEnabled.caEngaged;
    trigger: e;
    guard:(Speed>25)&&(PRNDL_In=3);
    action:{CA_HVI:=2;}
  }
   
   transition cat17{
    source:sc.raca.CollisionAvoidance.caEnabled.caEngaged;
    destination:sc.raca.CollisionAvoidance.caEnabled.caDisengaged;
    trigger: e;
    guard:((Speed>0)&&(Speed<=25))||(PRNDL_In!=3);
    action:{CA_HVI:=1;Warning:=0;}
  }
   
   transition cat24{
    source:sc.raca.CollisionAvoidance.caEnabled.caHalt;
    destination:sc.raca.CollisionAvoidance.caEnabled.caDisengaged;
    trigger: e;
    guard:(BrakePedal>10);
    action:{CA_HVI:=1;Warning:=0;}
  }
   
   transition cat25{
    source:sc.raca.CollisionAvoidance.caEnabled.caEngaged;
    destination:sc.raca.CollisionAvoidance.caEnabled.caHalt;
    trigger: e;
    guard:(Speed=1);
    action:{CA_HVI:=1;Warning:=4;}
  }
   
  }
  transition cat14{
  source:sc.raca.CollisionAvoidance.caDisabled;
  destination:sc.raca.CollisionAvoidance.caEnabled;
  trigger: e;
  guard:(CA_Enabled=BoolTRUE);
  action:{CA_HVI:=1;}
  }
  
  transition cat15{
  source:sc.raca.CollisionAvoidance.caEnabled;
  destination:sc.raca.CollisionAvoidance.caDisabled;
  trigger: e;
  guard:(CA_Enabled!=BoolTRUE);
  action:{CA_HVI:=0;Warning:=0;}
  }
   
  transition cat38{
  source:sc.raca.CollisionAvoidance.caOverride;
  destination:sc.raca.CollisionAvoidance.caDisabled;
  trigger: e;
  guard:(CA_Enabled!=BoolTRUE);
  action:{CA_HVI:=0;Warning:=0;}
  }
  
  transition cat36{
  source:sc.raca.CollisionAvoidance.caEnabled;
  destination:sc.raca.CollisionAvoidance.caOverride;
  trigger: e;
  guard:(AccelPedal>=35);
  action:{CA_HVI:=4;Warning:=0;}
  }
  
  transition cat37{
  source:sc.raca.CollisionAvoidance.caOverride;
  destination:sc.raca.CollisionAvoidance.caEnabled;
  trigger: e;
  guard:(AccelPedal<35);
  action:{CA_HVI:=1;}
  }
  
 /* transition t39{
  source:sc.raca.CollisionAvoidance.caOverride;
  destination:sc.raca.CollisionAvoidance.caFail;
  trigger: Error;
  guard:true;
  action:{CA_HVI:=3;}
  }*/
  
  /*transition t27{
  source:sc.raca.CollisionAvoidance.caEnabled;
  destination:sc.raca.CollisionAvoidance.caFail;
  trigger: Error;
  guard:true;
  action:{CA_HVI:=3;Warning:=0;}
  }*/
 
    }

  }
}
