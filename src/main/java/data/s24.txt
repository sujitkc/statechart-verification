/* Name in expression */
statechart sc {

  // struct declaration
  struct mystruct {
    a : int;
    b : boolean;
  }

  // user defined type based on earlier user defined type.
  struct yourstruct {
    a : int;
    b : mystruct;
  }


  v : int;
  y : boolean;
  vv : yourstruct;
  
  state s1 {
    x : int;
    xx : mystruct;
    
    state s11 {}
    state s12 {}

    transition t11 {
      source      : sc.s1.s11;
      destination : sc.s1.s12;
        guard : y;
        action :
        {
          sc.s1.x; // fully qualified name expression in nested state.
          sc.s1.xx; // fully qualified name in nested state and type struct
          sc.s1.xx.b; // fully qualified name in nested state and field within type struct
        }    
    }

  }
  
  state s2 {}
  
  transition t1 {
    source      : sc.s1;
    destination : sc.s2;
      guard : y;
      action :
      {
        sc.v; // fully qualified name expression
        v;  // unqualified name expression
        vv; // unqualified name of struct type
        vv.b; // unqualified name, field within struct type
        vv.b.b; // unqualified name, field within struct type within another struct type.

      }        
  }
}
